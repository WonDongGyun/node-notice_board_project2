<%- include ('../include/header') -%>
    <div class="input-group mb-3">
        <span class="input-group-text" id="basic-addon1">제목</span>
        <input type="text" id='title' class="form-control" aria-label="Username" aria-describedby="basic-addon1"
            readonly value="<%= readBoard['title'] %>">
    </div>
    <div class="input-group mb-3">
        <span class="input-group-text" id="basic-addon1">작성자명</span>
        <input type="text" id='nickname' class="form-control" aria-label="Username" aria-describedby="basic-addon1"
            readonly value="<%= readBoard['nickname'] %>">
    </div>
    <div class="input-group mb-3">
        <span class="input-group-text" id="basic-addon1">작성날짜</span>
        <input type="text" id='day' class="form-control" aria-label="Username" aria-describedby="basic-addon1" readonly
            value="<%= readBoard['day'].getFullYear() + '-' + parseInt(readBoard['day'].getMonth() + 1) + '-' + readBoard['day'].getDate() %>">
    </div>
    <div class="input-group mb-3">
        <span class="input-group-text" id="basic-addon1">내용</span>
        <input type="text" id='contents' class="form-control" aria-label="Username" aria-describedby="basic-addon1"
            readonly value="<%= readBoard['contents'] %>">
    </div>

    <div id="readDiv">
    </div>

    <div style="margin-top: 70px;">
        <div class="input-group mb-3">
            <span class="input-group-text">댓글</span>
            <input type="text" id="comment" class="form-control" placeholder="댓글을 남겨주세요."
                aria-label="Recipient's username" aria-describedby="button-addon2">
            <button class="btn btn-outline-secondary" type="button" onclick="write_comment()">댓글 작성</button>
        </div>

        <table class="table">
            <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">nickname</th>
                    <th scope="col">comment</th>
                    <th scope="col">Day</th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody id="commentMaster">
                <% for (var i=0; i < commentBoard.length; i++) { %>
                    <tr>
                        <th scope="row">
                            <%= i + 1 %>
                        </th>
                        <td>
                            <%= commentBoard[i]['nickname'] %>
                        </td>
                        <td>
                            <%= commentBoard[i]['comment'] %>
                        </td>
                        <td>
                            <%= commentBoard[i]['commentDay'].getFullYear() + '-' +
                                parseInt(commentBoard[i]['commentDay'].getMonth() + 1) + '-' +
                                commentBoard[i]['commentDay'].getDate() %>
                        </td>
                        <td>
                            <button type="button" class="btn btn-outline-secondary" onclick="commentUpd()">수정</button>
                            <button type="button" class="btn btn-outline-danger" onclick="commentUpd()">삭제</button>
                        </td>
                    </tr>
                    <% } %>
            </tbody>
        </table>
    </div>

    <%- include ('../include/modal') -%>


        <script>

            document.addEventListener('DOMContentLoaded', function () {
                make_button();
            })
            const queryString = window.location.search;
            const urlParam = new URLSearchParams(queryString);
            const boardId = urlParam.get('boardId');

            let nowButton = "";

            function make_button() {
                let nickname = document.getElementById('nickname').value
                let token = parseJwt(localStorage.getItem("token"))['nickname'];

                if (localStorage.getItem('token') != null && nickname == token) {
                    var btn_upd = document.createElement('button');
                    var btn_del = document.createElement('button');
                    var read = document.getElementById('readDiv');

                    btn_upd.type = 'button';
                    btn_del.type = 'button';

                    btn_upd.className = 'btn btn-primary';
                    btn_del.className = 'btn btn-danger';

                    btn_upd.id = 'updateButton';
                    btn_del.id = 'deleteButton';

                    btn_upd.onclick = () => {
                        updButtonSet();
                        chk_modal();
                    }

                    btn_del.onclick = () => {
                        delButtonSet();
                        chk_modal();
                    }

                    var loginTxt = document.createTextNode('수정하기');
                    btn_upd.appendChild(loginTxt);

                    var regTxt = document.createTextNode('삭제하기');
                    btn_del.appendChild(regTxt);


                    read.appendChild(btn_upd);
                    read.appendChild(btn_del);

                }
            }

            function updButtonSet() {
                nowButton = 'updateButton';
            }

            function delButtonSet() {
                nowButton = 'deleteButton';
            }

            // 비밀번호 입력 모달 열기
            function chk_modal() {
                var myChkModal = new bootstrap.Modal(document.getElementById("chkPassword"), {});
                myChkModal.show();
            }


            // 모달에서 확인 버튼을 누르면 함수 실행
            function chkPassWord(inputPW) {
                let nickname = parseJwt(localStorage.getItem("token"))['nickname'];

                var myModal = new bootstrap.Modal(document.getElementById("noticeModal"), {});
                var myWrongModal = new bootstrap.Modal(document.getElementById("wrongModal"), {});

                const data = {
                    boardId: boardId,
                    nickname: nickname,
                    passWord: inputPW,
                    nowButton: nowButton
                }

                const url = '/api/chkPassWord';
                const init = {
                    method: 'POST',
                    body: JSON.stringify(data),
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    credentials: 'same-origin'
                };

                fetch(url, init)
                    .then((res) => res.json())
                    .then(res => {

                        if (res.status == 200 || res.status == 201) {
                            responseTxt = res;

                            if (responseTxt['result'] == 'success' && nowButton == 'updateButton') {
                                location.href = '/updateBoard/?boardId=' + boardId;

                            } else if (responseTxt['result'] == 'success' && nowButton == 'deleteButton') {
                                const modalTitle = document.querySelector('#msgTitle');
                                var mtTxt = document.createTextNode(responseTxt['modal_title']);
                                modalTitle.appendChild(mtTxt);

                                const modalBody = document.querySelector('#msgbody');
                                var mbTxt = document.createTextNode(responseTxt['modal_body']);
                                modalBody.appendChild(mbTxt);

                                myModal.show();

                            } else {
                                myWrongModal.show();
                            }
                        } else {
                            myWrongModal.show();
                        }
                    })
            }


            // 댓글 추가
            function write_comment() {
                let nickname = parseJwt(localStorage.getItem("token"))['nickname'];
                let comment = document.getElementById('comment').value;

                var myModal = new bootstrap.Modal(document.getElementById("noticeModal"), {});
                var myChkValModal = new bootstrap.Modal(document.getElementById("chkValModal"), {});

                const data = {
                    boardId: boardId,
                    nickname: nickname,
                    comment: comment
                }

                if (comment != '') {
                    const url = '/api/writeComment';
                    const init = {
                        method: 'POST',
                        body: JSON.stringify(data),
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        credentials: 'same-origin'
                    };

                    fetch(url, init)
                        .then((res) => res.json())
                        .then(res => {
                            responseTxt = res;
                            const modalTitle = document.querySelector('#msgTitle');
                            var mtTxt = document.createTextNode(responseTxt['modal_title']);
                            modalTitle.appendChild(mtTxt);

                            const modalBody = document.querySelector('#msgbody');
                            var mbTxt = document.createTextNode(responseTxt['modal_body']);
                            modalBody.appendChild(mbTxt);

                            if (res.status == 200 || res.status == 201) {
                                myModal.show();

                            } else {
                                myWrongModal.show();
                            }
                        })
                } else {
                    myChkValModal.show();
                }
            }
        </script>
        <%- include ('../include/footer') -%>